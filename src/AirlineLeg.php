<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Gr4vy;


class AirlineLeg
{
    /**
     * Arrival airport code of leg. 3-letter ISO code according to IATA official directory.
     *
     * @var ?string $arrivalAirport
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('arrival_airport')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $arrivalAirport = null;

    /**
     * The date and time of travel in local time at the arrival airport.
     *
     * @var ?\DateTime $arrivalAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('arrival_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $arrivalAt = null;

    /**
     * Arrival city name.
     *
     * @var ?string $arrivalCity
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('arrival_city')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $arrivalCity = null;

    /**
     * Arrival country code in ISO 3166 format.
     *
     * @var ?string $arrivalCountry
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('arrival_country')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $arrivalCountry = null;

    /**
     * 3 character airline code as set by IATA.
     *
     * @var ?string $carrierCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('carrier_code')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $carrierCode = null;

    /**
     * Name of the airline.
     *
     * @var ?string $carrierName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('carrier_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $carrierName = null;

    /**
     * Two-character IATA code of the airline.
     *
     * @var ?string $iataDesignator
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('iata_designator')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $iataDesignator = null;

    /**
     * Three-character ICAO code of the airline.
     *
     * @var ?string $icaoCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('icao_code')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $icaoCode = null;

    /**
     * Coupon number associated with the leg.
     *
     * @var ?string $couponNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('coupon_number')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $couponNumber = null;

    /**
     * Departure airport code of leg. 3-letter ISO code according to IATA official directory.
     *
     * @var ?string $departureAirport
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('departure_airport')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $departureAirport = null;

    /**
     * The date and time of travel in local time at the departure airport.
     *
     * @var ?\DateTime $departureAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('departure_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $departureAt = null;

    /**
     * Departure city name.
     *
     * @var ?string $departureCity
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('departure_city')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $departureCity = null;

    /**
     * Departure airport code of leg. 3-letter ISO code according to IATA official directory.
     *
     * @var ?string $departureCountry
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('departure_country')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $departureCountry = null;

    /**
     * Departure tax amount charged by a country when a person is leaving the country.
     *
     * @var ?int $departureTaxAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('departure_tax_amount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $departureTaxAmount = null;

    /**
     * Amount of the ticket, for current leg of the trip, excluding taxes and fees.
     *
     * @var ?int $fareAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('fare_amount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $fareAmount = null;

    /**
     * The alphanumeric code for the booking class of a ticket.
     *
     * @var ?string $fareBasisCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('fare_basis_code')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $fareBasisCode = null;

    /**
     * Fee amount for current leg of the trip.
     *
     * @var ?int $feeAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('fee_amount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $feeAmount = null;

    /**
     * Indicates service class (first class, business class, etc.).
     *
     * @var ?string $flightClass
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('flight_class')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $flightClass = null;

    /**
     * Unique identifier of the flight number.
     *
     * @var ?string $flightNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('flight_number')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $flightNumber = null;

    /**
     * The route type of the flight.
     *
     * @var ?string $routeType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('route_type')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $routeType = null;

    /**
     * Indicates seat class (first class, business class, etc.).
     *
     * @var ?string $seatClass
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('seat_class')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $seatClass = null;

    /**
     * Indicates whether a stopover is allowed on this ticket.
     *
     * @var ?bool $stopOver
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('stop_over')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $stopOver = null;

    /**
     * Amount of the taxes for current leg of the trip.
     *
     * @var ?int $taxAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_amount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $taxAmount = null;

    /**
     * @param  ?string  $arrivalAirport
     * @param  ?\DateTime  $arrivalAt
     * @param  ?string  $arrivalCity
     * @param  ?string  $arrivalCountry
     * @param  ?string  $carrierCode
     * @param  ?string  $carrierName
     * @param  ?string  $iataDesignator
     * @param  ?string  $icaoCode
     * @param  ?string  $couponNumber
     * @param  ?string  $departureAirport
     * @param  ?\DateTime  $departureAt
     * @param  ?string  $departureCity
     * @param  ?string  $departureCountry
     * @param  ?int  $departureTaxAmount
     * @param  ?int  $fareAmount
     * @param  ?string  $fareBasisCode
     * @param  ?int  $feeAmount
     * @param  ?string  $flightClass
     * @param  ?string  $flightNumber
     * @param  ?string  $routeType
     * @param  ?string  $seatClass
     * @param  ?bool  $stopOver
     * @param  ?int  $taxAmount
     * @phpstan-pure
     */
    public function __construct(?string $arrivalAirport = null, ?\DateTime $arrivalAt = null, ?string $arrivalCity = null, ?string $arrivalCountry = null, ?string $carrierCode = null, ?string $carrierName = null, ?string $iataDesignator = null, ?string $icaoCode = null, ?string $couponNumber = null, ?string $departureAirport = null, ?\DateTime $departureAt = null, ?string $departureCity = null, ?string $departureCountry = null, ?int $departureTaxAmount = null, ?int $fareAmount = null, ?string $fareBasisCode = null, ?int $feeAmount = null, ?string $flightClass = null, ?string $flightNumber = null, ?string $routeType = null, ?string $seatClass = null, ?bool $stopOver = null, ?int $taxAmount = null)
    {
        $this->arrivalAirport = $arrivalAirport;
        $this->arrivalAt = $arrivalAt;
        $this->arrivalCity = $arrivalCity;
        $this->arrivalCountry = $arrivalCountry;
        $this->carrierCode = $carrierCode;
        $this->carrierName = $carrierName;
        $this->iataDesignator = $iataDesignator;
        $this->icaoCode = $icaoCode;
        $this->couponNumber = $couponNumber;
        $this->departureAirport = $departureAirport;
        $this->departureAt = $departureAt;
        $this->departureCity = $departureCity;
        $this->departureCountry = $departureCountry;
        $this->departureTaxAmount = $departureTaxAmount;
        $this->fareAmount = $fareAmount;
        $this->fareBasisCode = $fareBasisCode;
        $this->feeAmount = $feeAmount;
        $this->flightClass = $flightClass;
        $this->flightNumber = $flightNumber;
        $this->routeType = $routeType;
        $this->seatClass = $seatClass;
        $this->stopOver = $stopOver;
        $this->taxAmount = $taxAmount;
    }
}