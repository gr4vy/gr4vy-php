<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Gr4vy;


/** ApplePayPaymentMethodCreate - Create an Apple Pay transaction with a device or merchant token. */
class ApplePayPaymentMethodCreate
{
    /**
     * The opaque token as received from the Apple Pay JS library. This format may change between JS library versions.
     *
     * @var array<string, mixed> $token
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('token')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>')]
    public array $token;

    /**
     * The external identifier of the buyer to create a payment for.
     *
     * @var ?string $buyerExternalIdentifier
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('buyer_external_identifier')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $buyerExternalIdentifier = null;

    /**
     * The ID of the buyer to retrieve billing details for.
     *
     * @var ?string $buyerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('buyer_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $buyerId = null;

    /**
     * The card holder name associated to the original card for the token.
     *
     * @var ?string $cardholderName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('cardholder_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $cardholderName = null;

    /**
     * The URL to redirect a user back to after the complete 3DS in browser.
     *
     * @var ?string $redirectUrl
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('redirect_url')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $redirectUrl = null;

    /**
     * The last 4 digits of the original card used to generate the token.
     *
     * @var ?string $cardSuffix
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('card_suffix')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $cardSuffix = null;

    /**
     * The original card scheme for which the token was generated.
     *
     * @var ?string $cardScheme
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('card_scheme')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $cardScheme = null;

    /**
     * The payment scheme of the card.
     *
     * @var ?string $cardType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('card_type')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $cardType = null;

    /**
     * Always `applepay`
     *
     * @var string $method
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('method')]
    public string $method;

    /**
     * @param  string  $method
     * @param  array<string, mixed>  $token
     * @param  ?string  $buyerExternalIdentifier
     * @param  ?string  $buyerId
     * @param  ?string  $cardholderName
     * @param  ?string  $redirectUrl
     * @param  ?string  $cardSuffix
     * @param  ?string  $cardScheme
     * @param  ?string  $cardType
     * @phpstan-pure
     */
    public function __construct(array $token, ?string $buyerExternalIdentifier = null, ?string $buyerId = null, ?string $cardholderName = null, ?string $redirectUrl = null, ?string $cardSuffix = null, ?string $cardScheme = null, ?string $cardType = null, string $method = 'applepay')
    {
        $this->token = $token;
        $this->buyerExternalIdentifier = $buyerExternalIdentifier;
        $this->buyerId = $buyerId;
        $this->cardholderName = $cardholderName;
        $this->redirectUrl = $redirectUrl;
        $this->cardSuffix = $cardSuffix;
        $this->cardScheme = $cardScheme;
        $this->cardType = $cardType;
        $this->method = $method;
    }
}