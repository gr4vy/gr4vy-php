<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Gr4vy;


class DigitalWallet
{
    /**
     * The ID for the digital wallet.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * The ID of the merchant account this digital wallet belongs to.
     *
     * @var string $merchantAccountId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('merchant_account_id')]
    public string $merchantAccountId;

    /**
     *
     * @var DigitalWalletProvider $provider
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('provider')]
    #[\Speakeasy\Serializer\Annotation\Type('\Gr4vy\DigitalWalletProvider')]
    public DigitalWalletProvider $provider;

    /**
     * The name of the merchant the digital wallet is registered to.
     *
     * @var string $merchantName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('merchant_name')]
    public string $merchantName;

    /**
     * The list of domain names that a digital wallet can be used on (deprecated).
     *
     * @var array<string> $domainNames
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('domain_names')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>')]
    public array $domainNames;

    /**
     * The date this buyer was created at.
     *
     * @var \DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    public \DateTime $createdAt;

    /**
     * The date this buyer was last updated at.
     *
     * @var \DateTime $updatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updated_at')]
    public \DateTime $updatedAt;

    /**
     * The consumer facing name of the merchant.
     *
     * @var ?string $merchantDisplayName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('merchant_display_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $merchantDisplayName = null;

    /**
     * The main URL of the merchant.
     *
     * @var ?string $merchantUrl
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('merchant_url')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $merchantUrl = null;

    /**
     * The country code where the merchant is registered.
     *
     * @var ?string $merchantCountryCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('merchant_country_code')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $merchantCountryCode = null;

    /**
     * Custom attributes for some digital wallets. Currently only used by Click to Pay.
     *
     * @var ?array<string, mixed> $fields
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('fields')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $fields = null;

    /**
     * The number of active custom certificates registered for this digital wallet (Apple Pay only).
     *
     * @var ?int $activeCertificateCount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('active_certificate_count')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $activeCertificateCount = null;

    /**
     * The number of pending custom certificates registered for this digital wallet (Apple Pay only).
     *
     * @var ?int $pendingCertificateCount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('pending_certificate_count')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $pendingCertificateCount = null;

    /**
     * The number of expired custom certificates registered for this digital wallet (Apple Pay only).
     *
     * @var ?int $expiredCertificateCount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('expired_certificate_count')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $expiredCertificateCount = null;

    /**
     * Always `digital-wallet`.
     *
     * @var ?string $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $type = null;

    /**
     * @param  string  $id
     * @param  string  $merchantAccountId
     * @param  DigitalWalletProvider  $provider
     * @param  string  $merchantName
     * @param  array<string>  $domainNames
     * @param  \DateTime  $createdAt
     * @param  \DateTime  $updatedAt
     * @param  ?string  $type
     * @param  ?int  $activeCertificateCount
     * @param  ?int  $pendingCertificateCount
     * @param  ?int  $expiredCertificateCount
     * @param  ?string  $merchantDisplayName
     * @param  ?string  $merchantUrl
     * @param  ?string  $merchantCountryCode
     * @param  ?array<string, mixed>  $fields
     * @phpstan-pure
     */
    public function __construct(string $id, string $merchantAccountId, DigitalWalletProvider $provider, string $merchantName, array $domainNames, \DateTime $createdAt, \DateTime $updatedAt, ?string $merchantDisplayName = null, ?string $merchantUrl = null, ?string $merchantCountryCode = null, ?array $fields = null, ?int $activeCertificateCount = 0, ?int $pendingCertificateCount = 0, ?int $expiredCertificateCount = 0, ?string $type = 'digital-wallet')
    {
        $this->id = $id;
        $this->merchantAccountId = $merchantAccountId;
        $this->provider = $provider;
        $this->merchantName = $merchantName;
        $this->domainNames = $domainNames;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
        $this->merchantDisplayName = $merchantDisplayName;
        $this->merchantUrl = $merchantUrl;
        $this->merchantCountryCode = $merchantCountryCode;
        $this->fields = $fields;
        $this->activeCertificateCount = $activeCertificateCount;
        $this->pendingCertificateCount = $pendingCertificateCount;
        $this->expiredCertificateCount = $expiredCertificateCount;
        $this->type = $type;
    }
}