<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Gr4vy;


class PaymentOptionRequest
{
    /**
     * The metadata to used to evaluate checkout rules, which will help determine the right payment options to display.
     *
     * @var ?array<string, string> $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $metadata = null;

    /**
     * The country code used to evaluate checkout rules, and which are used to help determine the right payment options to display.
     *
     * @var ?string $country
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('country')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $country = null;

    /**
     * The currency code used to evaluate checkout rules, and which are used to help determine the right payment options to display.
     *
     * @var ?string $currency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('currency')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $currency = null;

    /**
     * The amount used to evaluate checkout rules, and which are used to help determine the right payment options to display.
     *
     * @var ?int $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $amount = null;

    /**
     * The cart items used to evaluate checkout rules, and which are used to help determine the right payment options to display.
     *
     * @var ?array<CartItem> $cartItems
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('cart_items')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Gr4vy\CartItem>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $cartItems = null;

    /**
     * The locale used to determine the labels for each payment option.
     *
     * @var ?string $locale
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('locale')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $locale = null;

    /**
     * @param  ?string  $locale
     * @param  ?array<string, string>  $metadata
     * @param  ?string  $country
     * @param  ?string  $currency
     * @param  ?int  $amount
     * @param  ?array<CartItem>  $cartItems
     * @phpstan-pure
     */
    public function __construct(?array $metadata = null, ?string $country = null, ?string $currency = null, ?int $amount = null, ?array $cartItems = null, ?string $locale = 'en')
    {
        $this->metadata = $metadata;
        $this->country = $country;
        $this->currency = $currency;
        $this->amount = $amount;
        $this->cartItems = $cartItems;
        $this->locale = $locale;
    }
}