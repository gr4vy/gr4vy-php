<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Gr4vy;


/**
 * PayoutSummary - PayoutSummary
 *
 *
 * Represents a summary of a payout.
 */
class PayoutSummary
{
    /**
     * The monetary amount for this payout, in the smallest currency unit for the given currency, for example `1299` cents to create an authorization for $12.99.
     *
     * @var int $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    public int $amount;

    /**
     * The date this payout was created at.
     *
     * @var \DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    public \DateTime $createdAt;

    /**
     * A supported ISO-4217 currency code.
     *
     * @var string $currency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('currency')]
    public string $currency;

    /**
     *
     * @var TransactionPaymentMethod $paymentMethod
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('payment_method')]
    #[\Speakeasy\Serializer\Annotation\Type('\Gr4vy\TransactionPaymentMethod')]
    public TransactionPaymentMethod $paymentMethod;

    /**
     *
     * @var PayoutPaymentService $paymentService
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('payment_service')]
    #[\Speakeasy\Serializer\Annotation\Type('\Gr4vy\PayoutPaymentService')]
    public PayoutPaymentService $paymentService;

    /**
     *
     * @var PayoutStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Gr4vy\PayoutStatus')]
    public PayoutStatus $status;

    /**
     * The date this payout was last updated at.
     *
     * @var \DateTime $updatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updated_at')]
    public \DateTime $updatedAt;

    /**
     * The ID for the payout.
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * The buyer used for this payout.
     *
     * @var ?TransactionBuyer $buyer
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('buyer')]
    #[\Speakeasy\Serializer\Annotation\Type('\Gr4vy\TransactionBuyer|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?TransactionBuyer $buyer = null;

    /**
     * The type of payout to process.
     *
     * @var ?PayoutCategory $category
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('category')]
    #[\Speakeasy\Serializer\Annotation\Type('\Gr4vy\PayoutCategory|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PayoutCategory $category = null;

    /**
     * The merchant identifier for this payout.
     *
     * @var ?string $externalIdentifier
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('external_identifier')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $externalIdentifier = null;

    /**
     * The merchant details associated to this payout.
     *
     * @var ?PayoutMerchantSummary $merchant
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('merchant')]
    #[\Speakeasy\Serializer\Annotation\Type('\Gr4vy\PayoutMerchantSummary|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PayoutMerchantSummary $merchant = null;

    /**
     * The ID of the merchant account this payout was created for.
     *
     * @var ?string $merchantAccountId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('merchant_account_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $merchantAccountId = null;

    /**
     * The ID of the payout in the underlying payment service.
     *
     * @var ?string $paymentServicePayoutId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('payment_service_payout_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $paymentServicePayoutId = null;

    /**
     * Always `payout`.
     *
     * @var ?string $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $type = null;

    /**
     * @param  int  $amount
     * @param  \DateTime  $createdAt
     * @param  string  $currency
     * @param  TransactionPaymentMethod  $paymentMethod
     * @param  PayoutPaymentService  $paymentService
     * @param  PayoutStatus  $status
     * @param  \DateTime  $updatedAt
     * @param  ?string  $type
     * @param  ?string  $id
     * @param  ?TransactionBuyer  $buyer
     * @param  ?PayoutCategory  $category
     * @param  ?string  $externalIdentifier
     * @param  ?PayoutMerchantSummary  $merchant
     * @param  ?string  $merchantAccountId
     * @param  ?string  $paymentServicePayoutId
     * @phpstan-pure
     */
    public function __construct(int $amount, \DateTime $createdAt, string $currency, TransactionPaymentMethod $paymentMethod, PayoutPaymentService $paymentService, PayoutStatus $status, \DateTime $updatedAt, ?string $id = null, ?TransactionBuyer $buyer = null, ?PayoutCategory $category = null, ?string $externalIdentifier = null, ?PayoutMerchantSummary $merchant = null, ?string $merchantAccountId = null, ?string $paymentServicePayoutId = null, ?string $type = 'payout')
    {
        $this->amount = $amount;
        $this->createdAt = $createdAt;
        $this->currency = $currency;
        $this->paymentMethod = $paymentMethod;
        $this->paymentService = $paymentService;
        $this->status = $status;
        $this->updatedAt = $updatedAt;
        $this->id = $id;
        $this->buyer = $buyer;
        $this->category = $category;
        $this->externalIdentifier = $externalIdentifier;
        $this->merchant = $merchant;
        $this->merchantAccountId = $merchantAccountId;
        $this->paymentServicePayoutId = $paymentServicePayoutId;
        $this->type = $type;
    }
}