<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Gr4vy;


class ThreeDSecureDataV1
{
    /**
     * The cardholder authentication value or AAV.
     *
     * @var string $cavv
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('cavv')]
    public string $cavv;

    /**
     * The ecommerce indicator for the 3DS transaction.
     *
     * @var string $eci
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('eci')]
    public string $eci;

    /**
     * The version of 3-D Secure that was used.
     *
     * @var string $version
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('version')]
    public string $version;

    /**
     * For 3-D Secure version 1, the enrolment response. For 3-D Secure version 2 and above, the transaction status from the `ARes`.
     *
     * @var string $directoryResponse
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('directory_response')]
    public string $directoryResponse;

    /**
     *  The response for the 3DS authentication call.
     *
     * @var string $authenticationResponse
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('authentication_response')]
    public string $authenticationResponse;

    /**
     * The CAVV algorithm used.
     *
     * @var string $cavvAlgorithm
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('cavv_algorithm')]
    public string $cavvAlgorithm;

    /**
     * The transaction identifier.
     *
     * @var string $xid
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('xid')]
    public string $xid;

    /**
     * The scheme/brand of the card that is used for 3-D Secure.
     *
     * @var ?CardScheme $scheme
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('scheme')]
    #[\Speakeasy\Serializer\Annotation\Type('\Gr4vy\CardScheme|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CardScheme $scheme = null;

    /**
     * @param  string  $cavv
     * @param  string  $eci
     * @param  string  $version
     * @param  string  $directoryResponse
     * @param  string  $authenticationResponse
     * @param  string  $cavvAlgorithm
     * @param  string  $xid
     * @param  ?CardScheme  $scheme
     * @phpstan-pure
     */
    public function __construct(string $cavv, string $eci, string $version, string $directoryResponse, string $authenticationResponse, string $cavvAlgorithm, string $xid, ?CardScheme $scheme = null)
    {
        $this->cavv = $cavv;
        $this->eci = $eci;
        $this->version = $version;
        $this->directoryResponse = $directoryResponse;
        $this->authenticationResponse = $authenticationResponse;
        $this->cavvAlgorithm = $cavvAlgorithm;
        $this->xid = $xid;
        $this->scheme = $scheme;
    }
}