<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Gr4vy;


class TransactionEventOutput
{
    /**
     * The ID for the event.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * The specific event name.
     *
     * @var string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    public string $name;

    /**
     * The date this event was created at.
     *
     * @var \DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    public \DateTime $createdAt;

    /**
     * $context
     *
     * @var array<string, mixed> $context
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('context')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>')]
    public array $context;

    /**
     * Always `transaction-event`.
     *
     * @var ?string $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $type = null;

    /**
     * @param  string  $id
     * @param  string  $name
     * @param  \DateTime  $createdAt
     * @param  array<string, mixed>  $context
     * @param  ?string  $type
     * @phpstan-pure
     */
    public function __construct(string $id, string $name, \DateTime $createdAt, array $context, ?string $type = 'transaction-event')
    {
        $this->id = $id;
        $this->name = $name;
        $this->createdAt = $createdAt;
        $this->context = $context;
        $this->type = $type;
    }
}